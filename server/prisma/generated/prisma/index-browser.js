
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  username: 'username',
  email: 'email',
  hashedPassword: 'hashedPassword',
  bio: 'bio',
  title: 'title',
  location: 'location',
  profileImage: 'profileImage',
  bannerImage: 'bannerImage',
  joinedAt: 'joinedAt',
  updatedAt: 'updatedAt',
  status: 'status',
  systemRole: 'systemRole',
  deactivatedAt: 'deactivatedAt',
  twitterUrl: 'twitterUrl',
  githubUrl: 'githubUrl',
  linkedinUrl: 'linkedinUrl',
  websiteUrl: 'websiteUrl'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  jti: 'jti',
  userId: 'userId',
  expiresAt: 'expiresAt',
  revoked: 'revoked',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserSettingsScalarFieldEnum = {
  id: 'id',
  theme: 'theme',
  notificationsEnabled: 'notificationsEnabled',
  emailMarketing: 'emailMarketing',
  emailSocial: 'emailSocial',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.FollowScalarFieldEnum = {
  followerId: 'followerId',
  followingId: 'followingId',
  createdAt: 'createdAt'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  content: 'content',
  category: 'category',
  isQuestion: 'isQuestion',
  isResolved: 'isResolved',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt',
  externalLink: 'externalLink',
  githubLink: 'githubLink',
  upvotesCount: 'upvotesCount',
  likesCount: 'likesCount',
  viewsCount: 'viewsCount',
  savedCount: 'savedCount',
  sharesCount: 'sharesCount',
  commentsCount: 'commentsCount',
  authorId: 'authorId'
};

exports.Prisma.GuideStepScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  order: 'order',
  postId: 'postId'
};

exports.Prisma.GuideSectionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  videoUrl: 'videoUrl',
  imageUrl: 'imageUrl',
  imagePublicId: 'imagePublicId',
  order: 'order',
  stepId: 'stepId'
};

exports.Prisma.PostImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  publicId: 'publicId',
  altText: 'altText',
  order: 'order',
  postId: 'postId'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt'
};

exports.Prisma.PostTagScalarFieldEnum = {
  postId: 'postId',
  tagId: 'tagId'
};

exports.Prisma.UpdateScalarFieldEnum = {
  id: 'id',
  version: 'version',
  title: 'title',
  category: 'category',
  content: 'content',
  publishedAt: 'publishedAt',
  authorId: 'authorId'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  text: 'text',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  deletedAt: 'deletedAt',
  level: 'level',
  likesCount: 'likesCount',
  dislikesCount: 'dislikesCount',
  postId: 'postId',
  authorId: 'authorId',
  parentId: 'parentId'
};

exports.Prisma.PostLikeScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  userId: 'userId',
  postId: 'postId'
};

exports.Prisma.PostSaveScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  userId: 'userId',
  postId: 'postId'
};

exports.Prisma.PostShareScalarFieldEnum = {
  id: 'id',
  platform: 'platform',
  createdAt: 'createdAt',
  postId: 'postId',
  sharerId: 'sharerId'
};

exports.Prisma.CommentUserReactionScalarFieldEnum = {
  id: 'id',
  reaction: 'reaction',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  commentId: 'commentId'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  read: 'read',
  metadata: 'metadata',
  createdAt: 'createdAt',
  recipientId: 'recipientId',
  senderId: 'senderId',
  postId: 'postId',
  commentId: 'commentId'
};

exports.Prisma.PostViewScalarFieldEnum = {
  id: 'id',
  firstViewedAt: 'firstViewedAt',
  lastViewedAt: 'lastViewedAt',
  viewCountByUser: 'viewCountByUser',
  userId: 'userId',
  postId: 'postId',
  anonymousVisitorId: 'anonymousVisitorId'
};

exports.Prisma.VisitorSessionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  initialIpAddress: 'initialIpAddress',
  initialUserAgent: 'initialUserAgent',
  initialPath: 'initialPath',
  userId: 'userId'
};

exports.Prisma.PageViewLogScalarFieldEnum = {
  id: 'id',
  path: 'path',
  createdAt: 'createdAt',
  sessionId: 'sessionId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserStatus = exports.$Enums.UserStatus = {
  ACTIVE: 'ACTIVE',
  DEACTIVATED: 'DEACTIVATED',
  BANNED: 'BANNED'
};

exports.SystemRole = exports.$Enums.SystemRole = {
  USER: 'USER',
  SYSTEM_CONTENT_CREATOR: 'SYSTEM_CONTENT_CREATOR',
  DEVELOPER: 'DEVELOPER',
  SUPER_ADMIN: 'SUPER_ADMIN'
};

exports.ThemePreference = exports.$Enums.ThemePreference = {
  LIGHT: 'LIGHT',
  DARK: 'DARK',
  SYSTEM: 'SYSTEM'
};

exports.PostCategory = exports.$Enums.PostCategory = {
  GUIDE: 'GUIDE',
  SHOWCASE: 'SHOWCASE',
  RESOURCE: 'RESOURCE'
};

exports.UpdateCategory = exports.$Enums.UpdateCategory = {
  APP_UPDATE: 'APP_UPDATE',
  MARKETING: 'MARKETING',
  COMMUNITY: 'COMMUNITY'
};

exports.SharePlatform = exports.$Enums.SharePlatform = {
  TWITTER: 'TWITTER',
  FACEBOOK: 'FACEBOOK',
  LINKEDIN: 'LINKEDIN',
  EMAIL: 'EMAIL',
  WHATSAPP: 'WHATSAPP',
  REDDIT: 'REDDIT',
  LINK_COPIED: 'LINK_COPIED',
  INTERNAL_MESSAGE: 'INTERNAL_MESSAGE',
  OTHER: 'OTHER'
};

exports.CommentReactionState = exports.$Enums.CommentReactionState = {
  LIKED: 'LIKED',
  DISLIKED: 'DISLIKED'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  NEW_COMMENT: 'NEW_COMMENT',
  POST_LIKE: 'POST_LIKE',
  NEW_FOLLOWER: 'NEW_FOLLOWER',
  COMMENT_REPLY: 'COMMENT_REPLY',
  SYSTEM_UPDATE: 'SYSTEM_UPDATE'
};

exports.Prisma.ModelName = {
  User: 'User',
  RefreshToken: 'RefreshToken',
  UserSettings: 'UserSettings',
  Follow: 'Follow',
  Post: 'Post',
  GuideStep: 'GuideStep',
  GuideSection: 'GuideSection',
  PostImage: 'PostImage',
  Tag: 'Tag',
  PostTag: 'PostTag',
  Update: 'Update',
  Comment: 'Comment',
  PostLike: 'PostLike',
  PostSave: 'PostSave',
  PostShare: 'PostShare',
  CommentUserReaction: 'CommentUserReaction',
  Notification: 'Notification',
  PostView: 'PostView',
  VisitorSession: 'VisitorSession',
  PageViewLog: 'PageViewLog'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
